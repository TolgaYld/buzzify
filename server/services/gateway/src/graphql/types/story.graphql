# import User from "./user.graphql"
# import Comment from "./comment.graphql"
# import Report from "./report.graphql"
# import Channel from "./channel.graphql"
# import Location from "./location.graphql"
# import VisibilityType from "./visibilityType.graphql"

type Query {
  story(id: ID!): Story!
  storys: [Story!]
}

type Story {
  _id: ID!
  text: String
  media: [String]
  created_by: User!
  user: User!
  location: Location!
  city: String
  channels: [Channel!]!
  comments: [Comment]
  visibility: VisibilityType!
  likes: [User!]
  dislikes: [User!]
  public_votes: [User!]
  linked_users: [User!]
  hashtags: [String]
  shares: [User!]
  is_active: Boolean!
  is_deleted: Boolean!
  created_at: String
  updated_at: String
  updated_by: User
}

type Mutation {
  createStory(data: CreateStoryInput!): Story!
  likeOrDislikeStory(story_id: ID!, like: Boolean!): Story!
  togglePublicVoteStory(story_id: ID!, like: Boolean!): Story!
  updateStory(id: ID, data: UpdateStoryInput!): Story!
  deleteStoryFromDb(id: ID!): Story!
}

input CreateStoryInput {
  coordinates: [Float!]!
  text: String
  media: [String]
  visibility: VisibilityType
  channels: [ID!]!
}

input UpdateStoryInput {
  text: String!
  media: [String]
  channels: [ID]
  visibility: VisibilityType
  is_active: Boolean
  is_deleted: Boolean
}

type Subscription {
  story(device_id: ID): Story!
}
