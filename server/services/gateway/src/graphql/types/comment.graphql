# import User from "./user.graphql"
# import Post from "./post.graphql"
# import Report from "./report.graphql"

type Query {
    comment(id: ID!): Comment!
    comments: [Comment!]
}

type Comment {
  _id: ID!
  text: String
  media: [String]
  created_by: User!
  post: Post!
  type: String!
  likes: [User!]!
  dislikes: [User!]
  is_active: Boolean
  is_deleted: Boolean!
  created_at: String!
  last_update_from_user: ID
}

type Mutation{
    createComment(data: CreateCommentInput!): Comment!
    likeOrDislikeComment(id: ID!, like: Boolean!): Comment!
    updateComment(id: ID, data: UpdateCommentInput!):Comment
    deleteCommentFromDb(id: ID!):Comment!
}

input CreateCommentInput{
  text: String
  media: [String]
  post: ID!
  type: String!
  last_update_from_user: ID
}

input UpdateCommentInput{
  text: String!
  media: [String]
  post: ID
  type: String
  is_active: Boolean
  is_deleted: Boolean
}


type Subscription {
    comment(device_id: ID): Comment!
}
