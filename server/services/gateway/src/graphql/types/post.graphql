# import User from "./user.graphql"
# import Comment from "./comment.graphql"
# import Report from "./report.graphql"
# import Channel from "./channel.graphql"
# import Story from "./story.graphql"
# import Location from "./location.graphql"

type Query {
  post(id: ID!): Post!
  posts: [Post!]!
  getNearContents(coordinates: [Float!]!): PostsAndStorys
}

type Post {
  _id: ID!
  text: String
  media: [String]
  created_by: User!
  location: Location!
  city: String
  channels: [Channel!]!
  comments: [Comment]
  type: String!
  likes: [User!]
  dislikes: [User!]
  is_active: Boolean!
  is_deleted: Boolean!
  created_at: String!
  last_update_from_user: ID
}

type Mutation {
  createPost(data: CreatePostInput!): Post!
  likeOrDislikePost(id: ID!, like: Boolean!): Post!
  updatePost(id: ID, data: UpdatePostInput!): Post!
  deletePostFromDb(id: ID!): Post!
}

input CreatePostInput {
  coordinates: [Float!]!
  text: String
  media: [String]
  type: String!
  channels: [ID!]!
}

input UpdatePostInput {
  text: String!
  media: [String]
  channels: [ID]
  type: String
  is_active: Boolean
  is_deleted: Boolean
}

type Subscription {
  post(device_id: ID): Post!
}

type PostsAndStorys {
  posts: [Post!]
  storys: [Story!]
}
