# import User from "./user.graphql"
# import Comment from "./comment.graphql"
# import Report from "./report.graphql"
# import Channel from "./channel.graphql"
# import Story from "./story.graphql"

type Query {
    post(id: ID!): Post!
    posts: [Post!]!
    getNearContents(coordinates: [Float!]!): PostsAndStorys
}

type Post {
  _id: ID!
  text: String
  media: [String]
  user: User!
  coordinates: [Float!]!
  city: String
  channel: Channel!
  comments: [Comment]
  likes: [User!]!
  dislikes: [User!]!
  type: String!
  expiry_date: String
  is_active: Boolean!
  is_deleted: Boolean!
  created_at: String
  last_update_from_user: ID
}

type Mutation{
    createPost(data: CreatePostInput!): Post!
    likeorDislikePost(id: ID!, like: Boolean!): Post!
    updatePost(id: ID, data: UpdatePostInput!): Post!
    deletePostFromDb(id: ID!): Post!
}

input CreatePostInput{
  coordinates: [Float!]!
  text: String
  media: [String]
  type: String!
  channel: ID!
}

input UpdatePostInput{
  text: String!
  media: [String]
  channel: ID
  type: String
  is_active: Boolean
  is_deleted: Boolean
}


type Subscription {
    post(device_id: ID): Post!
}

type PostsAndStorys {
    posts: [Post!]
    storys: [Story!]
}