name: Deploy Backend to Production

on:
  push:
    branches:
      - main

jobs:
  build-core:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Set up .npmrc for authentication
      run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" > ~/.npmrc

    - name: Build and publish Core NPM Package
      working-directory: ./server/packages/core
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        MONGODBCONNECTIONSTRING: ${{ secrets.MONGODBCONNECTIONSTRING }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SECRET_KEY_REFRESH: ${{ secrets.SECRET_KEY_REFRESH }}
        REDISURL: ${{ secrets.REDISURL }}
        REDISPASSWORD: ${{ secrets.REDISPASSWORD }}
        AUTHSERVICE: ${{ secrets.AUTHSERVICE }}
        CHANNELSERVICE: ${{ secrets.CHANNELSERVICE }}
        POSTSERVICE: ${{ secrets.POSTSERVICE }}
        COMMENTSERVICE: ${{ secrets.COMMENTSERVICE }}
        STORYSERVICE: ${{ secrets.STORYSERVICE }}
        REPORTSERVICE: ${{ secrets.REPORTSERVICE }}
      run: |
        npm version patch
        npm publish --tag latest

    - name: Modify package.json for production environment in all services except core
      run: |
        for dir in ./server/packages/*; do
          if [ -d "$dir" ] && [ -f "$dir/package.json" ] && [[ "$dir" != *"/core" ]]; then
            jq '.dependencies."@tolgayld/core-buzzup" = "@tolgayld/core-buzzup@latest"' $dir/package.json > temp.json && mv temp.json $dir/package.json
          fi
        done
      shell: bash

    - name: Install dependencies
      working-directory: ./server
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        yarn install

  build-docker-images:
    runs-on: ubuntu-latest
    needs: build-core
    strategy:
      matrix:
        service: [gateway, auth-ms, channel-ms, post-ms, story-ms, report-ms, comment-ms]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Build and push Docker image for ${{ matrix.service }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        docker login --username ${{ github.actor }} --password ${{ secrets.GH_TOKEN }} ghcr.io
        docker build -f ./server/packages/${{ matrix.service }}/Dockerfile -t ghcr.io/tolgayld/buzzup/${{ matrix.service }}:latest --build-arg GITHUB_TOKEN=${{ secrets.GH_TOKEN }} ./server
        docker push ghcr.io/tolgayld/buzzup/${{ matrix.service }}:latest

  flutter:
    runs-on: ubuntu-latest
    needs: build-docker-images

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Flutter steps
      run: echo "No steps for Flutter yet"
