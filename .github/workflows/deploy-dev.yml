name: Deploy Backend to Development

on:
  push:
    branches:
      - develop

jobs:
  build-core:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      
      - name: Set up .npmrc for authentication
        run: |
          echo "@TolgaYld:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc

      - name: Get latest dev version from GitHub Packages using yarn
        id: get-latest-version
        working-directory: ./server/services/core
        run: |
          latest_version=$(yarn info @TolgaYld/core-buzzup --json --registry=https://npm.pkg.github.com/ | jq -r '.data["dist-tags"].dev')
          echo "Latest dev version from registry: $latest_version"
          # Split version and increment the minor version
          base_version=$(echo $latest_version | cut -d'-' -f1)
          new_version=$(node -p "let v='$base_version'.split('.'); v[2]++; v.join('.')")-dev
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create .env file for core package
        working-directory: ./server/services/core
        run: |
          echo "MONGODBCONNECTIONSTRING=${{ secrets.MONGODBCONNECTIONSTRING }}" > .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "SECRET_KEY_REFRESH=${{ secrets.SECRET_KEY_REFRESH }}" >> .env
          echo "REDISURL=${{ secrets.REDISURL }}" >> .env
          echo "REDISPASSWORD=${{ secrets.REDISPASSWORD }}" >> .env
          echo "AUTHSERVICE=${{ secrets.AUTHSERVICE }}" >> .env
          echo "CHANNELSERVICE=${{ secrets.CHANNELSERVICE }}" >> .env
          echo "POSTSERVICE=${{ secrets.POSTSERVICE }}" >> .env
          echo "COMMENTSERVICE=${{ secrets.COMMENTSERVICE }}" >> .env
          echo "STORYSERVICE=${{ secrets.STORYSERVICE }}" >> .env
          echo "REPORTSERVICE=${{ secrets.REPORTSERVICE }}" >> .env

      - name: Set new version and publish Core NPM Package with dev tag
        working-directory: ./server/services/core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Erhöhe die Version
          npm version $new_version --no-git-tag-version
          # Überprüfe, ob alle Umgebungsvariablen gesetzt sind
          echo "MONGODBCONNECTIONSTRING: $MONGODBCONNECTIONSTRING"
          echo "SECRET_KEY: $SECRET_KEY"
          echo "SECRET_KEY_REFRESH: $SECRET_KEY_REFRESH"
          echo "REDISURL: $REDISURL"
          echo "REDISPASSWORD: $REDISPASSWORD"
          echo "AUTHSERVICE: $AUTHSERVICE"
          echo "CHANNELSERVICE: $CHANNELSERVICE"
          echo "POSTSERVICE: $POSTSERVICE"
          echo "COMMENTSERVICE: $COMMENTSERVICE"
          echo "STORYSERVICE: $STORYSERVICE"
          echo "REPORTSERVICE: $REPORTSERVICE"
          # Veröffentliche das Paket
          npm publish --tag dev

      - name: Modify package.json for dev environment in all services except core
        run: |
          for dir in ./server/services/*; do
            if [ -d "$dir" ] && [ -f "$dir/package.json" ] && [[ "$dir" != *"/core" ]]; then
              jq '.dependencies."@tolgayld/core-buzzup" = "@tolgayld/core-buzzup@dev"' $dir/package.json > temp.json && mv temp.json $dir/package.json
            fi
          done
        shell: bash

      - name: Install dependencies
        working-directory: ./server
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          yarn config set @TolgaYld:registry https://npm.pkg.github.com/
          yarn install

  build-docker-images:
    runs-on: ubuntu-latest
    needs: build-core
    environment: dev
    strategy:
      matrix:
        service: [gateway, auth-ms, channel-ms, post-ms, story-ms, report-ms, comment-ms]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Build and push Docker image for ${{ matrix.service }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          docker login --username ${{ github.actor }} --password ${{ secrets.GH_TOKEN }} ghcr.io
          docker build -f ./server/services/${{ matrix.service }}/Dockerfile -t ghcr.io/tolgayld/buzzup/${{ matrix.service }}:develop --build-arg GITHUB_TOKEN=${{ secrets.GH_TOKEN }} ./server
          docker push ghcr.io/tolgayld/buzzup/${{ matrix.service }}:develop

  flutter:
    runs-on: ubuntu-latest
    needs: build-docker-images
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Flutter steps
        run: echo "No steps for Flutter yet"
